// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  OWNER
  CUSTOMER
}

enum PropertyType {
  APARTMENT
  HOUSE
  LAND
}

enum PropertyStatus {
  AVAILABLE
  SOLD
  RENTED
}

model User {
  id Int @id @default(autoincrement())
  Role Role @default(CUSTOMER)
  userName String 
  email String  @db.VarChar(191)
  password String @db.VarChar(191)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  properties Property[] @relation("UserProperties")


  @@map("users")
}

model Property {
  id Int @id @default(autoincrement())
  ownerId Int
  title String
  description String?
  price Float
  type PropertyType
  status PropertyStatus @default(AVAILABLE)
  address String
  latitude Float?
  longitude Float?
  bedrooms Int?
  bathrooms Int?
  area Float? // in square feet or square meters
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner User @relation("UserProperties",fields: [ownerId], references: [id])

  images PropertyImage[]

  @@map("properties")
}

model PropertyImage {
  id         Int   @id @default(autoincrement())
  imageUrl    String
  propertyId Int
  publicId String? // Optional field for storing the public ID of the image in cloud storage
  property   Property @relation(fields: [propertyId], references: [id])

  createdAt  DateTime @default(now())

  @@map("property_images")
}